name: CI/CD for Bookstore Backend

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test and Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Install dependencies
      run: |
        go mod tidy
        go install github.com/swaggo/swag/cmd/swag@latest

    - name: Generate Swagger documentation
      run: |
        swag init -g cmd/api/main.go -o ./docs
        ls -la ./docs/

    - name: Validate Swagger files
      run: |
        [ -f ./docs/swagger.json ] && echo "swagger.json generated" || exit 1
        [ -f ./docs/swagger.yaml ] && echo "swagger.yaml generated" || exit 1
      
    - name: Upload Swagger artifacts
      uses: actions/upload-artifact@v4
      with:
        name: swagger-docs
        path: |
          docs/
        retention-days: 30
    
    - name: Build and test Go application
      run: |
        go build -o bookstore-app ./cmd/api
        echo "Go application builds successfully"

    - name: Build Docker image
      run: docker build -t bookstore-api:latest .

    - name: Test Docker container
      run: |
        docker run -d -p 8080:8080 --name test-api bookstore-api:latest
        echo "Waiting for container to start..."
        sleep 15
        
        curl -f http://localhost:8080/health || (docker logs test-api && exit 1)
        curl -f http://localhost:8080/api/hello || (docker logs test-api && exit 1)
        
        docker logs test-api
        
        docker stop test-api
        docker rm test-api

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to Render
      run: |
        echo "CI/CD passed! Ready for deployment to Render"